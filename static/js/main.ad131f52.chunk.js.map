{"version":3,"sources":["helpers.js","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["getById","array","id","find","item","Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","tab","title","cn","onClick","tabHandler","href","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAU,SAACC,EAAOC,GAAR,OAAeD,EAAME,MAAK,SAAAC,GAAI,OAAIA,EAAKF,KAAOA,M,OCGxDG,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAcT,EAAQM,EAAMC,IAAkBD,EAAK,GAQzD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACC,GACT,IAAQV,EAAcU,EAAdV,GAAIW,EAAUD,EAAVC,MAEZ,OACE,oBAEEH,UAAWI,IAAG,CACZ,YAAaZ,IAAOO,EAAYP,KAElC,UAAQ,MALV,SAOE,mBACEa,QAAS,kBAtBN,SAACH,GACdA,EAAIV,KAAOK,GACbC,EAAcI,GAoBaI,CAAWJ,IAC1BK,KAAI,WAAMf,GACV,UAAQ,UAHV,SAKGW,KAXEX,UAkBf,qBAAKQ,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYS,cChCRZ,EAAO,CAClB,CAAEJ,GAAI,QAASW,MAAO,QAASK,QAAS,eACxC,CAAEhB,GAAI,QAASW,MAAO,QAASK,QAAS,eACxC,CAAEhB,GAAI,QAASW,MAAO,QAASK,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOb,EAAP,KAAsBc,EAAtB,KAEQR,EAAUb,EAAQM,EAAMC,GAAxBM,MAER,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBG,KAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAAAI,GAAG,OAAIS,EAAiBT,EAAIV,WCxBnDoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ad131f52.chunk.js","sourcesContent":["export const getById = (array, id) => array.find(item => item.id === id);\n","import cn from 'classnames';\nimport { getById } from '../../helpers';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const selectedTab = getById(tabs, selectedTabId) || tabs[0];\n\n  const tabHandler = (tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={cn({\n                  'is-active': id === selectedTab.id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => tabHandler(tab)}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs/Tabs';\nimport { getById } from './helpers';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const { title } = getById(tabs, selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={tab => setSelectedTabId(tab.id)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}